name: epgtihuan

on:
  schedule:
    - cron: '11 */1 * * *'   # 每小時第 11 分鐘執行
  workflow_dispatch:           # 支援手動觸發

jobs:
  generate_and_upload:
    runs-on: ubuntu-latest

    steps:
      # 第一步：檢出當前倉庫（生成腳本所在倉庫）
      - name: Checkout source repo
        uses: actions/checkout@v4

      # 第二步：設定 PHP 環境
      - name: Set up PHP 7.4
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'

      # 第三步：執行生成腳本
      - name: Run epggen2.php
        run: php epggen2.php

      # 第四步：檢出目標倉庫到子目錄 tvepg
      - name: Checkout target repo
        uses: actions/checkout@v4
        with:
          repository: zzq12345/tvepg
          token: ${{ secrets.GITHUB_TOKEN }}
          path: tvepg

      # 第五步：覆蓋目標倉庫中的檔案
      - name: Overwrite target files
        run: |
          echo "📂 檢查生成的檔案..."
          ls -l epgshanghai.xml epghebeiiptv1.xml epgyidong.xml

          echo "🔁 覆蓋到 tvepg 目錄..."
          cp -f epgshanghai.xml tvepg/epgshanghai.xml
          cp -f epghebeiiptv1.xml tvepg/epghebeiiptv1.xml
          cp -f epgyidong.xml tvepg/epgyidong.xml

          echo "✅ 覆蓋後檔案清單："
          ls -l tvepg/*.xml

      # 第六步：提交並推送變更
      - name: Commit and push changes
        working-directory: tvepg
        run: |
          echo "🔧 設定 Git 環境..."
          git config --global --add safe.directory "$(pwd)"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          echo "📡 同步遠端..."
          git fetch origin main
          git rebase origin/main || {
            echo "⚠️ Rebase 遇到衝突，退出 workflow"
            git rebase --abort
            exit 1
          }

          echo "🧩 檢查目前狀態..."
          git status
          git diff || true

          echo "📦 加入所有變更..."
          git add -A

          echo "---- 檢查 staged 狀態 ----"
          git diff --cached || true

          # 只有在有變更時才提交
          if [ -n "$(git diff --cached)" ]; then
            now_time=$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S')
            git commit -m "自动更新时间：$now_time"
            git push origin main --force-with-lease
            echo "✅ 成功提交並推送變更"
          else
            echo "⚠️ 無實際內容變更，跳過提交與推送"
          fi
